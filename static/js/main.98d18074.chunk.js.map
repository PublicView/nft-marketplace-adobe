{"version":3,"sources":["assets/marketplace_icon.png","reportWebVitals.ts","routes/explore/Explore.tsx","nft/nft.ts","common/NftService.ts","routes/createCollection/CreateCollection.tsx","routes/profile/Profile.tsx","routes/displayCollections/DisplayCollection.tsx","routes/displayItems/DisplayItems.tsx","routes/addItem/AddItem.tsx","common/web3modal.tsx","App.tsx","index.tsx","assets/wallet.png"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Explore","createCollection","walletDetails","collection","console","log","web3","Promise","resolve","reject","eth","Contract","abi","deploy","data","bin","object","arguments","name","symbol","send","from","owner","on","receipt","err","error","addItem","item","contractAddress","methods","metadata","ipfsHash","gas","gasPrice","e","res","MarketPlaceApi","axios","create","baseURL","process","NftService","post","get","userAddress","collectionId","formdata","CreateCollection","props","useState","isCreating","setIsCreating","displayCollections","useForm","register","handleSubmit","className","style","display","float","type","color","height","width","onSubmit","defaultAccount","network","networkId","chainId","NFT","a","result","catch","id","aria-describedby","placeholder","required","Display","collections","setCollections","useNavigate","displayCreateCollection","displayCollectionItems","useEffect","getCollectionsOfUser","getAllCollections","displayItems","textAlign","onClick","length","map","data-value1","cursor","fontSize","DisplayItems","displayAddItem","items","setItems","getCollectionItems","src","tokenURL","alt","tokenId","AddItem","itemName","setItemName","selectedImage","setSelectedImage","description","setDescription","mintItem","preventDefault","file","formData","FormData","append","JSON","stringify","uploadItem","nft","onChange","target","value","accept","files","undefined","URL","createObjectURL","Profile","DISPLAY_COLLECTIONS","setDisplay","selectedCollection","setSelectedCollection","CREATE_COLLECTION","DISPLAY_COLLECTION_ITEMS","DISPLAY_ADD_ITEM","walletLinkProvider","WalletLink","appName","makeWeb3Provider","providerOptions","torus","package","Torus","walletconnect","web3Modal","Web3Modal","cacheProvider","App","setWeb3","setAccounts","setWalletDetails","initializeProvider","connect","provider","Web3","getAccounts","accounts","net","getId","getChainId","connectWallet","clearCachedProvider","Navbar","expand","variant","bg","fixed","paddingLeft","require","default","verticalAlign","aria-label","aria-current","href","padding","alignSelf","1","3","4","5","marginTop","paddingTop","marginLeft","marginRight","ReactDOM","render","basename","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.98d18074.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marketplace_icon.935ab5c2.png\";","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nexport default function Explore(){\r\n    return (<div>Explore</div>);\r\n}","import Web3 from \"web3\";\r\nimport { AbiItem } from 'web3-utils'\r\nimport { TransactionReceipt } from 'web3-core'\r\nimport abi from \"../contracts/nft/abi.json\";\r\nimport bin from \"../contracts/nft/bin.json\";\r\nimport { Collection, Item } from \"../models/Nft\";\r\nimport { WalletDetails } from \"../models/WalletDetails\";\r\n\r\nfunction createCollection(walletDetails: WalletDetails, collection: Collection): Promise<TransactionReceipt> {\r\n    console.log(\"Creating Collection\");\r\n    let web3: Web3 = walletDetails.web3;\r\n    return new Promise((resolve, reject) => {\r\n        var nftContract = new web3.eth.Contract(abi as AbiItem[]);\r\n        var nft = nftContract.deploy({\r\n            data: bin.object,\r\n            arguments: [\r\n                collection.name,\r\n                collection.symbol,\r\n            ]\r\n        }).send({\r\n            from: collection.owner\r\n        })\r\n            .on('receipt', receipt => {\r\n                console.log('Contract mined:');\r\n                console.log(receipt);\r\n                resolve(receipt);\r\n            })\r\n            .on('error', err => {\r\n                console.error(err);\r\n                reject(err);\r\n            });\r\n    })\r\n\r\n}\r\n\r\nfunction addItem(walletDetails: WalletDetails, collection: Collection, item: Item) {\r\n    console.log(\"Minting NFT\");\r\n    return new Promise((resolve, reject) => {\r\n        let web3: Web3 = walletDetails.web3;\r\n        const contractInstance = new web3.eth.Contract(\r\n            abi as AbiItem[],\r\n            collection.contractAddress,\r\n        );\r\n        contractInstance.methods.addItem(\"ipfs://\" + item.metadata.ipfsHash)\r\n            .send({\r\n                from: item.owner,\r\n                gas: '4700000',\r\n                gasPrice: '40000000000'\r\n            }, (e: any, res: unknown) => {\r\n                console.log(e, res);\r\n                if (e) reject(e);\r\n                else {\r\n                    console.log('New Item Added!! ');\r\n                    resolve(res);\r\n                }\r\n            });\r\n    });\r\n\r\n}\r\nexport default {\r\n    createCollection,\r\n    addItem\r\n}","import axios, { AxiosResponse } from \"axios\";\r\nimport { Collection, Item } from \"../models/Nft\";\r\nconst MarketPlaceApi = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL\r\n});\r\nexport default class NftService {\r\n    public static createCollection(collection:Collection):Promise<AxiosResponse<Collection>>{    \r\n        return MarketPlaceApi.post('/nft/collection', collection);\r\n    }\r\n\r\n    public static getAllCollections():Promise<AxiosResponse<Collection[]>>{\r\n        return MarketPlaceApi.get('/nft/collection');\r\n    }\r\n\r\n    public static getCollectionsOfUser(userAddress:string):Promise<AxiosResponse<Collection[]>>{\r\n        return MarketPlaceApi.get('/nft/user/'+userAddress+\"/collection\");\r\n    }\r\n\r\n    \r\n    public static getCollectionItems(collectionId:string):Promise<AxiosResponse<Item[]>>{\r\n        return MarketPlaceApi.get('/nft/collection/'+collectionId+\"/items\");\r\n    }\r\n\r\n    public static uploadItem(collectionId:string,formdata:FormData):Promise<AxiosResponse<Item>>{    \r\n        return MarketPlaceApi.post('/nft/collection/'+collectionId+'/item/upload', formdata);\r\n    }\r\n}","import NFT from \"../../nft/nft\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport './CreateCollection.css';\r\nimport { WalletDetails } from \"../../models/WalletDetails\";\r\nimport { Collection } from \"../../models/Nft\";\r\nimport NftService from \"../../common/NftService\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useState } from \"react\";\r\nexport default function CreateCollection(props: any) {\r\n    let [isCreating, setIsCreating] = useState(false);\r\n    let walletDetails: WalletDetails = props.walletDetails;\r\n    let displayCollections = props.displayCollections;\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data: { name: string, symbol: string }) => {\r\n        setIsCreating(true);\r\n        let collection: Collection = {\r\n            name: data.name,\r\n            symbol: data.symbol,\r\n            owner: walletDetails.defaultAccount,\r\n            network: {\r\n                networkId: walletDetails.networkId,\r\n                chainId: walletDetails.chainId\r\n            }\r\n        }\r\n        NFT.createCollection(walletDetails, collection).then(async res => {\r\n            //console.log(res);    \r\n            console.log(res.contractAddress);\r\n            collection.contractAddress = res.contractAddress;\r\n            let result = await NftService.createCollection(collection);\r\n            console.log(\"New Collection Craeted Successfully\");\r\n            console.log(result);\r\n            setIsCreating(false);\r\n            // Go Back to Explore view\r\n            displayCollections();\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"d-flex justify-content-center container\">\r\n            <div className={`collection-box ${isCreating ? \"disable\" : \"\"}`} >\r\n                <h4 style={{ display: \"inline\" }}> Create new NFT collection</h4> &nbsp;&nbsp;\r\n                {isCreating &&\r\n                    <div style={{ display: \"inline\", float: \"right\" }}>\r\n                        <div style={{ display: \"inline-block\"}}>Waiting for confirmation</div>&nbsp;\r\n                        <div style={{ display: \"inline-block\"}}><Loader\r\n                            type=\"Puff\"\r\n                            color=\"#00BFFF\"\r\n                            height={30}\r\n                            width={30}\r\n                        /></div>\r\n             \r\n                    </div>\r\n                }\r\n                <hr />\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                        <label >Name</label><br />\r\n                        <input className=\"form-control\" id=\"name\" aria-describedby=\"nameHelp\" placeholder=\"Enter collection name\" {...register(\"name\", { required: true })} />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"form-group\">\r\n                        <label >Symbol</label><br />\r\n                        <small id=\"symbolHelp\" className=\"form-text text-muted\">Having Symbol will help users identify your collection</small>\r\n                        <input className=\"form-control\" id=\"name\" aria-describedby=\"symbolHelp\" placeholder=\"Enter collection symbol\" {...register(\"symbol\", { required: true })} />\r\n                    </div>\r\n                    <br />\r\n                    <span>\r\n                        <strong>Note:</strong>\r\n                        This will create contract in blockchian. Lazy minting feature will be availible soon\r\n                    </span>\r\n                    <br />\r\n                    <button type=\"submit\" className=\"btn btn-info\" >Create</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import CreateCollection from \"../createCollection/CreateCollection\";\r\nimport { WalletDetails } from \"../../models/WalletDetails\";\r\nimport { useState } from \"react\";\r\nimport DisplayCollection from \"../displayCollections/DisplayCollection\";\r\nimport DisplayItems from \"../displayItems/DisplayItems\";\r\nimport { Collection } from \"../../models/Nft\";\r\nimport AddItem from \"../addItem/AddItem\";\r\n\r\n\r\nenum Display {\r\n    DISPLAY_COLLECTIONS,\r\n    CREATE_COLLECTION,\r\n    DISPLAY_COLLECTION_ITEMS,\r\n    DISPLAY_ADD_ITEM\r\n}\r\n\r\nexport default function Profile(props: any) {\r\n    let walletDetails: WalletDetails = props.walletDetails;\r\n    let [display, setDisplay] = useState(Display.DISPLAY_COLLECTIONS);\r\n    let [selectedCollection, setSelectedCollection] = useState<Collection>();\r\n    let displayCollections = () => {\r\n        setDisplay(Display.DISPLAY_COLLECTIONS);\r\n    }\r\n    let displayCreateCollection = () => {\r\n        setDisplay(Display.CREATE_COLLECTION);\r\n    }\r\n\r\n    let displayCollectionItems = (collection: Collection) => {\r\n        setSelectedCollection(collection);\r\n        setDisplay(Display.DISPLAY_COLLECTION_ITEMS);\r\n    }\r\n    let displayAddItem = () => {\r\n        setDisplay(Display.DISPLAY_ADD_ITEM);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                display != Display.DISPLAY_COLLECTIONS &&\r\n                <button className=\"btn btn-info btn-sm mb-3\" onClick={() => { setDisplay(Display.DISPLAY_COLLECTIONS) }}>\r\n                    Back\r\n                </button>\r\n            }\r\n            <div >\r\n                <div>\r\n                    {(() => {\r\n                        switch (display) {\r\n                            case Display.DISPLAY_COLLECTIONS:\r\n                                return <DisplayCollection\r\n                                    walletDetails={walletDetails}\r\n                                    displayCreateCollection={displayCreateCollection}\r\n                                    displayCollectionItems={displayCollectionItems}\r\n                                ></DisplayCollection>\r\n                            case Display.CREATE_COLLECTION:\r\n                                return <CreateCollection\r\n                                    walletDetails={walletDetails}\r\n                                    displayCollections = {displayCollections}\r\n                                ></CreateCollection>\r\n                            case Display.DISPLAY_COLLECTION_ITEMS:\r\n                                return <DisplayItems\r\n                                    walletDetails={walletDetails}\r\n                                    displayAddItem={displayAddItem}\r\n                                    collection={selectedCollection}\r\n                                ></DisplayItems>\r\n                            case Display.DISPLAY_ADD_ITEM:\r\n                                return <AddItem\r\n                                    walletDetails={walletDetails}\r\n                                    displayCollectionItems={displayCollectionItems}\r\n                                    collection={selectedCollection}\r\n                                ></AddItem>\r\n                            default:\r\n                                return <DisplayCollection\r\n                                    walletDetails={walletDetails}\r\n                                    displayCreateCollection={displayCreateCollection}\r\n                                    displayCollectionItems={displayCollectionItems}\r\n                                ></DisplayCollection>\r\n                        }\r\n                    })()\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport NftService from \"../../common/NftService\";\r\nimport { Collection } from \"../../models/Nft\";\r\nimport { WalletDetails } from \"../../models/WalletDetails\"\r\nimport \"./DisplayCollection.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function (props: any) {\r\n\r\n    let walletDetails: WalletDetails = props.walletDetails;\r\n    let [collections, setCollections] = useState<Collection[]>([]);\r\n    const navigate = useNavigate();\r\n    console.log(collections);\r\n    let displayCreateCollection = props.displayCreateCollection;\r\n    let displayCollectionItems = props.displayCollectionItems;\r\n    useEffect(() => {\r\n        if (walletDetails) {\r\n            NftService.getCollectionsOfUser(walletDetails.defaultAccount)\r\n                .then((result) => {\r\n                    setCollections(result.data);\r\n                })\r\n        }\r\n        else {\r\n            NftService.getAllCollections()\r\n                .then((result) => {\r\n                    setCollections(result.data);\r\n                })\r\n        }\r\n    }, [walletDetails]);\r\n\r\n    let displayItems = (collection: Collection) => () => {\r\n        console.log(collection);\r\n        displayCollectionItems(collection);\r\n    };\r\n    return (<div>\r\n        <div >\r\n            <h2 style={{ textAlign: \"center\", display: \"inline\" }}>My Collections</h2> &nbsp;&nbsp;\r\n            <button className=\"btn btn-info btn-sm mb-3\" onClick={() => { displayCreateCollection() }}>\r\n                    Create New Collection\r\n            </button>\r\n            <br />\r\n        </div>\r\n        <div className=\"grid-container\">\r\n            {collections.length > 0 ?\r\n                collections.map(collection => {\r\n                    return (<div>\r\n                        <div data-value1={collection} className=\"card\" style={{ cursor: \"pointer\" }} onClick={displayItems(collection)}>\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">{collection.name}</h4>\r\n                                <h6>Symbol: {collection.symbol}</h6>\r\n                                <span >Network: {collection.network.networkId}</span><br />\r\n                                <span style={{ fontSize: \"0.8em\" }}>Contract Address: {collection.contractAddress}</span><br />\r\n                            </div>\r\n                        </div>\r\n                    </div>)\r\n                })\r\n                :\r\n                <div>No Collections Found</div>\r\n            }\r\n        </div>\r\n    </div>)\r\n}","import { useEffect, useState } from \"react\";\r\nimport NftService from \"../../common/NftService\";\r\nimport { Collection, Item } from \"../../models/Nft\";\r\nimport { WalletDetails } from \"../../models/WalletDetails\"\r\nimport \"./DisplayItems.css\"\r\nexport default function DisplayItems(props: any) {\r\n    let walletDetails: WalletDetails = props.walletDetails;\r\n    let collection: Collection = props.collection;\r\n    let displayAddItem = props.displayAddItem;\r\n    let [items, setItems] = useState<Item[]>([]);\r\n    console.log(items);\r\n    useEffect(() => {\r\n        if (collection.id)\r\n            NftService.getCollectionItems(collection.id)\r\n                .then((result) => {\r\n                    console.log(\"Resultttt\");\r\n                    console.log(result.data);\r\n                    setItems(result.data);\r\n                });\r\n\r\n    }, [collection]);\r\n\r\n    let addItem = (collection: Collection) => () => {\r\n        console.log(collection);\r\n        displayAddItem(collection);\r\n    };\r\n    return (<div className=\"container\">\r\n        <div className=\"row\">\r\n            <div >\r\n                <h2 style={{ textAlign: \"center\", display: \"inline\" }}>{collection.name}</h2> &nbsp;&nbsp;\r\n                <button className=\"btn btn-info mb-2\" style={{ float: \"right\" }} onClick={addItem(collection)}>Add Item</button>                \r\n            </div><br />\r\n            <br /><hr /><br />\r\n            <div>\r\n                <div className=\"grid-container-item\">\r\n                    {items.length > 0 ?\r\n                        items.map(item => {\r\n                            return (<div>\r\n                                <div className=\"card\" style={{ height: \"100%\", cursor: \"pointer\" }}>\r\n                                    <img className=\"card-img-top\" style={{ height: \"55%\" }} src={item.tokenURL} alt={item.metadata.name} />\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\">{item.metadata.name}</h4>\r\n                                        <h6 >Token Id: {item.tokenId}</h6>\r\n                                        <span>Owner: {item.owner}</span><br />\r\n                                    </div>\r\n                                </div>\r\n                            </div>)\r\n                        })\r\n                        :\r\n                        <div>No Items Found</div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>)\r\n}","import { useEffect, useState } from \"react\";\r\nimport NftService from \"../../common/NftService\";\r\nimport { Collection, Item } from \"../../models/Nft\";\r\nimport { WalletDetails } from \"../../models/WalletDetails\";\r\nimport nft from \"../../nft/nft\";\r\nimport Loader from \"react-loader-spinner\";\r\nexport default function AddItem(props: any) {\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [selectedImage, setSelectedImage] = useState<File>();\r\n    const [description, setDescription] = useState();\r\n    let [isCreating, setIsCreating] = useState(false);\r\n    const walletDetails: WalletDetails = props.walletDetails;\r\n    const collection: Collection = props.collection;\r\n    let displayCollectionItems = props.displayCollectionItems;\r\n    useEffect(() => {\r\n\r\n    }, [walletDetails, collection])\r\n    const imageChange = (e: any) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            console.log(e.target.files[0]);\r\n            setSelectedImage(e.target.files[0]);\r\n        }\r\n        else {\r\n            setSelectedImage(undefined);\r\n        }\r\n    };\r\n\r\n    const nameChange = (e: any) => {\r\n        setItemName(e.target.value);\r\n    }\r\n\r\n    const desriptionChange = (e: any) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    const mintItem = async (e: any) => {\r\n        e.preventDefault();\r\n        setIsCreating(true);\r\n        let item = {\r\n            collectionId: collection.id,\r\n            owner: walletDetails.defaultAccount,\r\n            tokenURL: \"\",\r\n            metadata: {\r\n                name: itemName,\r\n                description: description\r\n            }\r\n        }\r\n        let file = selectedImage\r\n        var formData = new FormData();\r\n        if (file)\r\n            formData.append(\"file\", file);\r\n        formData.append(\"item\", JSON.stringify(item));\r\n        // console.log(JSON.stringify(item));\r\n        let result: Item = (await NftService.uploadItem(\"\" + collection.id, formData)).data;\r\n        await nft.addItem(walletDetails, collection, result);\r\n        setIsCreating(false);\r\n        displayCollectionItems(collection);\r\n    };\r\n    return (\r\n        <div className=\"d-flex justify-content-center \">\r\n            <div className={`collection-box container ${isCreating ? \"disable\" : \"\"}`} >\r\n                <h4 style={{ display: \"inline\" }}> Item Details</h4>\r\n                {isCreating &&\r\n                    <div style={{ display: \"inline\", float: \"right\" }}>\r\n                        <div style={{ display: \"inline-block\" }}>Waiting for confirmation</div>&nbsp;\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                            <Loader\r\n                                type=\"Puff\"\r\n                                color=\"#00BFFF\"\r\n                                height={30}\r\n                                width={30}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <form onSubmit={mintItem}>\r\n                            <div className=\"form-group\">\r\n                                <label >Name</label><br />\r\n                                <input className=\"form-control\"\r\n                                    id=\"name\"\r\n                                    aria-describedby=\"nameHelp\"\r\n                                    placeholder=\"Enter collection name\"\r\n                                    onChange={nameChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form-group\">\r\n                                <label >Description</label><br />\r\n                                <textarea\r\n                                    className=\"form-control\"\r\n                                    id=\"description\"\r\n                                    placeholder=\"Enter collection symbol\"\r\n                                    onChange={desriptionChange}\r\n                                />\r\n                            </div>\r\n                            <br />\r\n                            <span>\r\n                                <strong>Note:</strong>\r\n                                This will mint item in blockchian. Lazy minting feature will be availible soon\r\n                            </span>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                id=\"formFile\"\r\n                                onChange={imageChange}\r\n                                required\r\n                            />\r\n                            <br /> <br />\r\n                            <button type=\"submit\" className=\"btn btn-info\" >Create</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <h6>Preview</h6>\r\n                        <div className=\"card\" style={{ width: \"20rem\", height: \"25rem\" }}>\r\n                            {selectedImage && <img className=\"card-img-top\" style={{ height: \"55%\" }} alt=\"Image Preview\" src={URL.createObjectURL(selectedImage)} />}\r\n                            {!selectedImage && <img className=\"card-img-top\" style={{ height: \"55%\" }} />}\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">{itemName}</h4>\r\n                                <h6 >Token Id: 1</h6>\r\n                                <span style={{ fontSize: \"0.75em\" }}>Owner: {walletDetails.defaultAccount}</span><br />\r\n                                <button className=\"btn btn-info\" >View On Opensea</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Web3Modal from \"web3modal\";\r\nimport WalletLink from 'walletlink'\r\nimport Torus from \"@toruslabs/torus-embed\";\r\nconst ETH_JSONRPC_URL = ''\r\nconst CHAIN_ID = 1;\r\nconst walletLink = new WalletLink({\r\n    appName: \"coinbase\",\r\n});\r\nconst walletLinkProvider = walletLink.makeWeb3Provider(ETH_JSONRPC_URL, CHAIN_ID)\r\n\r\nconst providerOptions = {\r\n    torus: {\r\n        package: Torus\r\n    },\r\n    // authereum: {\r\n    //     package: Authereum\r\n    // },\r\n    walletconnect: {\r\n        package: walletLinkProvider\r\n    }\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n    //network: \"mainnet\", // optional\r\n    cacheProvider: true, // optional\r\n    providerOptions: providerOptions\r\n});\r\n\r\n\r\nexport default web3Modal","import { useEffect, useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport web3Modal from './common/web3modal';\r\nimport './App.css';\r\nimport Profile from './routes/profile/Profile';\r\nimport { WalletDetails } from './models/WalletDetails';\r\nimport { Navbar, Container } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n  const [web3, setWeb3] = useState<Web3>();\r\n  const [accounts, setAccounts] = useState<string[]>();\r\n  const [walletDetails, setWalletDetails] = useState<WalletDetails>();\r\n  const networks: Record<number, string> = { 1: \"Mainnet\", 3: \"Ropsten\", 4: \"Rinkeby\", 5: \"Goerli\" };\r\n  const [contractAddress, setContractAddress] = useState<string>();\r\n  async function initializeProvider() {\r\n    const provider = await web3Modal.connect();\r\n    let web3 = new Web3(provider);\r\n    setWeb3(web3);\r\n    const accounts = await web3.eth.getAccounts();\r\n    const networkId = await web3.eth.net.getId();\r\n    const chainId = await web3.eth.getChainId();\r\n    let walletDetails: WalletDetails = {\r\n      web3: web3,\r\n      defaultAccount: accounts[0],\r\n      chainId: chainId,\r\n      networkId: networkId\r\n    }\r\n    setWalletDetails(walletDetails);\r\n    provider.on(\"disconnect\", (error: { code: number; message: string }) => {\r\n      console.log(error);\r\n      setWeb3(undefined);\r\n    });\r\n    provider.on(\"accountsChanged\", (accounts: string[]) => {\r\n      setAccounts(accounts);\r\n      setWalletDetails({ ...walletDetails, defaultAccount: accounts[0] });\r\n      console.log(accounts);\r\n    });\r\n    provider.on(\"networkChanged\", (networkId: number) => {\r\n      console.log(networkId);\r\n      setWalletDetails({ ...walletDetails, networkId: networkId });\r\n    });\r\n  }\r\n\r\n  async function connectWallet() {\r\n    if (web3) {\r\n      web3Modal.clearCachedProvider();\r\n      setWalletDetails(undefined);\r\n      setWeb3(undefined);\r\n    }\r\n    else {\r\n      initializeProvider();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    (async () => {\r\n      console.log(\"called\");\r\n      initializeProvider();\r\n    })();\r\n  }, []);\r\n\r\n  // function deployCollection() {\r\n  //   // deploy only if we have valid account selected\r\n  //   // TODO: verify whether account address is valid\r\n  //   if (web3 && defaultAccount) {\r\n  //     let collection: Collection = {\r\n  //       web3: web3,\r\n  //       name: \"NFT2021\",\r\n  //       symbol: \"NNFT\",\r\n  //       account: defaultAccount\r\n  //     }\r\n  //     NFT.createCollection(collection).then(res => {\r\n  //       //console.log(res);    \r\n  //       console.log(res.contractAddress);\r\n  //       setContractAddress(res.contractAddress);\r\n  //     }).catch(err => {\r\n  //       console.log(err);\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // function addItem() {\r\n  //   if (web3 && defaultAccount && contractAddress) {\r\n  //     let item: Item = {\r\n  //       web3: web3,\r\n  //       account: defaultAccount,\r\n  //       contractAddress: contractAddress,\r\n  //       ipfsHash: \"QmQxVsopX1ug14eNzDkFCTYo7XLmWuyn1h8GGVVAvUPdui\"\r\n  //     }\r\n  //     NFT.addItem(item).then(res => {\r\n  //       console.log(res);\r\n  //     }).catch(err => {\r\n  //       console.log(err);\r\n  //     })\r\n  //   }\r\n  // }\r\n  return (<div>\r\n    <div className=\"App\" >\r\n      <Navbar className=\"navbar-custom\" expand=\"lg\" variant=\"light\" bg=\"light\" fixed=\"top\">\r\n        <nav style={{ width: \"100%\" }} className=\"nav navbar stickey-top justify-content-between  navbar-light\" >\r\n          <div className=\"col-sm-3 \" style={{ paddingLeft: \"20px\", display: \"table\" }}>\r\n            <img src={require('./assets/marketplace_icon.png').default} style={{ width: 110, height: 80, float: 'left' }}></img>\r\n            <h4 style={{ color: '#396669', display: \"table-cell\", verticalAlign: \"middle\" }}>P2P NFT Marketplace</h4>\r\n          </div>\r\n          <div className=\"col-sm-5 align-items-center mt-2 \"\r\n            style={{ verticalAlign: \"middle\", paddingLeft: \"30px\" }}>\r\n            <ul className=\"nav\">\r\n              <input className=\"form-control\" style={{ width: 350 }} type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link active\" style={{ color: \"#396669\" }} aria-current=\"page\" href=\"#\">Explore</a>\r\n              </li>\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link\" style={{ color: \"#396669\" }} href=\"#\">Profile</a>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm-4\" style={{ display: \"grid\", textAlign: \"center\", padding: \"5px\" }}>\r\n            <div className={`${walletDetails ? \"wallet-banner\" : \"\"}`} style={{ alignSelf: \"center\", padding: \"5px\" }}>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                  <div style={{ float: 'right', textAlign: \"left\" }}>\r\n                    {\r\n                      walletDetails &&\r\n                      <div>\r\n                        <span  >Network: {networks[walletDetails.networkId] ?? \"Custom Network\"}</span><br />\r\n                        <span style={{ fontSize: \"0.7em\" }} >Account: {walletDetails.defaultAccount}</span>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className={`col-md-4 ${!walletDetails ? \"wallet-banner\" : \"\"}`} >\r\n                  <div >\r\n                    <img src={require('./assets/wallet.png').default} style={{ width: 50, height: 50, cursor: 'pointer' }} onClick={connectWallet} ></img>\r\n                  </div>\r\n                  {\r\n                    !walletDetails &&\r\n                    <div style={{ marginTop: \"-10px\" }}>\r\n                      <span style={{ fontSize: \"0.8em\" }} >\r\n                        Not Connected\r\n                      </span>\r\n                    </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </Navbar>\r\n    </div>\r\n    <div className=\"App-header\" style={{ paddingTop: \"140px\", marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n      {web3 && walletDetails ?\r\n        <div>\r\n          {/* <CreateCollection web3={web3} defaultAccount={defaultAccount}  ></CreateCollection> */}\r\n\r\n          {!walletDetails ?\r\n            <div>\r\n              <h2>Failed To Connect to Wallet</h2>\r\n            </div>\r\n            :\r\n            <div >\r\n              <div>\r\n                {!contractAddress ?\r\n                  <Profile walletDetails={walletDetails} ></Profile>\r\n                  :\r\n                  <div>\r\n                    <br /><br />\r\n                    <h3>Collection Created Successfully</h3>\r\n                    <span>Collection Address: {contractAddress}</span><br /><br />\r\n                    {/* <button className=\"btn btn-info\" onClick={addItem}>Add Item</button> */}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n\r\n          }\r\n        </div>\r\n        :\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h2>Connect Your Wallet to Proceed</h2>\r\n          <img src={require('./assets/wallet.png').default} style={{ width: \"200px\", height: \"200px\", cursor: 'pointer' }} onClick={connectWallet}></img>\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {  BrowserRouter, Routes,Route} from 'react-router-dom';\r\nimport Explore from './routes/explore/Explore';\r\nimport Profile from './routes/profile/Profile';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/nft-marketplace\">\r\n    <Routes>\r\n      <Route path=\"/\" element={<App/>}>\r\n        <Route path=\"explore\" element={<Explore />} />\r\n        <Route path=\"profile/:address\" element={<Profile />} >                    \r\n        </Route>      \r\n      </Route>\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/wallet.9b1cf0df.png\";"],"sourceRoot":""}